#!/usr/bin/env python
""" This script can be called in terminal (with cmd args) to generate desired plot.

Author: Farmehr Farhour f.farhour@gmail.com

Takes in command line arguments and generates the desired output based on the input given.
Input Data that can be passed to this script:
    - JSON outputs generated by engines on various algorithms
Output that can be created by this script:
    - vega-spec JSON files
    - Plots with formats: SVG, PNG, HTML
Plot types that can be created:
    - Scatter graphs
    - Bar graphs
"""

import scripts.json2vega as json2vega               #convert json outputs to vega-spec JSONs
from scripts.utils import parseCmdLineArgs  #function to parse cmd args
import os,sys   #built-in


def main(argv):
    """Creates a bar graph by calling methods in json2vega.py"""

    args = parseCmdLineArgs(argv)  # process input arguments passed
    if not os.path.exists(args.o):  # create output directory
        os.makedirs(args.o)

    # Create required arguments (from input arguments provided) and instantite class object for testing.
    conditions = {"algorithm": args.algorithm_name}
    conditions.update(args.conds)
    axes_vars = {'x': args.xaxis, 'y': args.yaxis}
    names = {'engine_name': args.engine_name, 'algorithm_name': args.algorithm_name,
             'x_axis': args.xlabel, 'y_axis': args.ylabel, 'file_suffix': args.filesuffix}

    def f(x):
        """switch statement for the plot_type object creation"""
        return {
            'bar': json2vega.VegaGraphBar(output_path=args.o,
                                          input_path=args.input,
                                          config_dir="scripts/config_files",
                                          labels=names,
                                          conditions_dict=conditions,
                                          axes_vars=axes_vars),
        }[x]
    bar1 = f(args.plot_type)
    bar1.run(verbose=args.v)


if __name__ == "__main__":
    main(sys.argv)
